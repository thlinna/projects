# Supabase Best Practices

## Authentication & Authorization
- Leverage Supabase Auth for secure authentication flows.
- Enforce Row-Level Security (RLS) policies on all tables accessed by clients.
- Regularly audit RLS policies for correctness and security gaps.

## Database Access
- Use server-side Supabase clients for sensitive operations, restricting client-side direct database access.
- Clearly define roles and permissions for Supabase DB users.

## Storage Management
- Always validate and sanitize filenames and content types before storing user-uploaded files.
- Set strict access rules for Supabase Storage buckets.
- Regularly prune unused files to reduce attack surface and costs.

## Realtime Considerations
- Only enable realtime subscriptions on tables that genuinely require it.
- Limit exposure of sensitive or user-identifiable data via realtime streams.

## Edge Functions & APIs
- Validate and sanitize all inputs rigorously within Supabase Edge Functions.
- Use explicit error handling and response standards for consistency.
- Secure Edge Functions with appropriate authentication and rate limiting.

## Environment Management
- Clearly separate development, staging, and production Supabase environments.
- Rotate API keys regularly and store them securely in environment variables.

## Testing & Monitoring
- Regularly test RLS policies and security rules in isolated test environments.
- Implement monitoring and alerts for unusual database activity or security incidents.
